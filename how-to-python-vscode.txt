############################
### Terminal buffer size ###
############################
To increase the buffer size of the Terminal, click File -> Preferences -> Settings and search for “Scrollback” in the search bar. 
You will find the following setting: Terminal -> Integrated: Scrollback, and change the number to your desired lines, for example, 10000.

#####################################
### Supprimer les parameter hints ###
#####################################

Paramètres -> Editeur de texte -> Suggestions + Quick suggestions modifier dans settings.json
Ou
AppData\Roaming\Code\User\settings.json
    "editor.parameterHints.enabled": false,


##############################
### Utilisation de modules ###
##############################

Permet de déclarer le repertoire projet dans le chemin des modules
Mettre à jour les 2 fichiers suivants (pour terminal et debug):

.env

WORKSPACE_FOLDER=C:\Dropbox\Python\AoC
PYTHONPATH=${WORKSPACE_FOLDER}\modules;


.vscode/settings.json (a créer éventuellement)

{
    "terminal.integrated.env.windows": {
        "PYTHONPATH": "${workspaceFolder}/modules"
    },
    "python.envFile": "${workspaceFolder}/.env"
}

#######################
### Black formatter ###
#######################
Installer l'extension "black formatter" de microsoft

https://builtin.com/data-science/autopep8-vs-black

-> ouvrir le setting.json global: AppData\Roaming\Code\User\settings.json
View > Command Palette... and run Preferences: Open User Settings (JSON):


    "[python]": {
        "editor.formatOnType": true,
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": true
    },



##############################
### Isort import organizer ###
##############################
Installer l'extension "isort" de microsoft

    "[python]": {
        "editor.formatOnType": true,
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        },
    },
    "isort.args":["--profile", "black"],



!!! Black impose son style : recommendation: ne pas le changer !!!
### Black line length ###
'Code -> Preferences -> Settings' and search for "python formatting black args".

Add two separate arguments, in this order: --line-length and n, where "n" is your desired number of allowed characters per line:

    "black-formatter.args": [
        "--line-length 100"
    ]

    #"python.formatting.blackArgs": [
        #"--line-length",
        #"119"
    #],

####################
### Python DEBUG ###
####################
In .vscode/launch.json, specify a dynamic working directory (i.e. the directory where the currently-open Python file is located) using:

    "cwd": "${fileDirname}"
    "purpose":["debug-in-terminal"]

This takes advantage of the "variables/variable substitution" feature in VS Code, and the predefined variable fileDirname. Note these variables are case sensitive. Don't use capital-F FileDirname, and be careful of typo's, which might be the problem with answers like these.
Note as comments say, you might also need to add the purpose option:
"purpose": ["debug-in-terminal"]
"Purpose" might be required if using the play button on the top-right of the window, vs F5 or "Run and Debug" in the sidebar.
If you're using the Python: Current File (Integrated Terminal) option when you run Python, your launch.json file might look like mine, below (more info on launch.json files here).

{
    "version": "0.2.0",
    "configurations": [
    {
            "name": "Python: Current File (Integrated Terminal)",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "cwd": "${fileDirname}",
            "purpose":["debug-in-terminal"]
    }, 

    //... other settings, but I modified the "Current File" setting above ...
}

The launch.json file controls the run/debug settings of your Visual Studio code project; my launch.json file was auto-generated by VS Code, in the directory of my current "Open Project". I just edited the file manually to add "cwd": "${fileDirname}" as shown above.

Note the launch.json file may be specific to your project, or specific to your directory, so confirm you're editing the correct launch.json (see comment)